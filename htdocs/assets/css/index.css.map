{"version":3,"file":"index.css","sources":["assets/css/index.scss","assets/css/_utils.scss","assets/css/_reset.scss","assets/css/_variables.scss","assets/css/_indexSprites.scss"],"sourcesContent":["@charset \"utf-8\";\n\n@import \"utils\";\n@import \"reset\";\n@import \"variables\";\n\n@import \"indexSprites\";\n\n\n#loading {\n}\n","@charset \"utf-8\";\n\n//------------------//\n//   media queris   //\n//------------------//\n\n@mixin sizeS {\n  @media screen and (max-width: 680px) {\n    @content;\n  }\n}\n\n@mixin sizeM {\n  @media screen and (min-width: 681px) and (max-width: 980px) {\n    @content;\n  }\n}\n\n@mixin sizeSM {\n  @media screen and (min-width: 681px) and (max-width: 840px) {\n    @content;\n  }\n}\n\n@mixin forLessSizeM {\n  @media screen and (max-width: 980px) {\n    @content;\n  }\n}\n\n//------------//\n//   easing   //\n//------------//\n\n$linear: cubic-bezier(0.250, 0.250, 0.750, 0.750);\n$ease: cubic-bezier(0.250, 0.100, 0.250, 1.000);\n$easeIn: cubic-bezier(0.420, 0.000, 1.000, 1.000);\n$easeOut: cubic-bezier(0.000, 0.000, 0.580, 1.000);\n$easeInOut: cubic-bezier(0.420, 0.000, 0.580, 1.000);\n\n$easeInQuad: cubic-bezier(0.550, 0.085, 0.680, 0.530);\n$easeInCubic: cubic-bezier(0.550, 0.055, 0.675, 0.190);\n$easeInQuart: cubic-bezier(0.895, 0.030, 0.685, 0.220);\n$easeInQuint: cubic-bezier(0.755, 0.050, 0.855, 0.060);\n$easeInSine: cubic-bezier(0.470, 0.000, 0.745, 0.715);\n$easeInExpo: cubic-bezier(0.950, 0.050, 0.795, 0.035);\n$easeInCirc: cubic-bezier(0.600, 0.040, 0.980, 0.335);\n$easeInBack: cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$easeOutQuad: cubic-bezier(0.250, 0.460, 0.450, 0.940);\n$easeOutCubic: cubic-bezier(0.215, 0.610, 0.355, 1.000);\n$easeOutQuart: cubic-bezier(0.165, 0.840, 0.440, 1.000);\n$easeOutQuint: cubic-bezier(0.230, 1.000, 0.320, 1.000);\n$easeOutSine: cubic-bezier(0.390, 0.575, 0.565, 1.000);\n$easeOutExpo: cubic-bezier(0.190, 1.000, 0.220, 1.000);\n$easeOutCirc: cubic-bezier(0.075, 0.820, 0.165, 1.000);\n$easeOutBack: cubic-bezier(0.175, 0.885, 0.320, 1.275);\n\n$easeInOutQuad: cubic-bezier(0.455, 0.030, 0.515, 0.955);\n$easeInOutCubic: cubic-bezier(0.645, 0.045, 0.355, 1.000);\n$easeInOutQuart: cubic-bezier(0.770, 0.000, 0.175, 1.000);\n$easeInOutQuint: cubic-bezier(0.860, 0.000, 0.070, 1.000);\n$easeInOutSine: cubic-bezier(0.445, 0.050, 0.550, 0.950);\n$easeInOutExpo: cubic-bezier(0.190, 1.000, 0.220, 1.000);\n$easeInOutCirc: cubic-bezier(0.785, 0.135, 0.150, 0.860);\n$easeInOutBack: cubic-bezier(0.680, -0.550, 0.265, 1.550);\n\n\n//-------------//\n//   opacity   //\n//-------------//\n\n@mixin opacity($opacity) {\n  opacity: $opacity;\n  $opacityIE: $opacity * 100;\n  filter: alpha(opacity=$opacityIE);\n}\n\n@mixin autoAlpha($value) {\n  @if $value > 0 {\n    visibility: visible;\n  } @else {\n    visibility: hidden;\n  }\n  opacity: $value;\n}\n\n\n//------------//\n//   button   //\n//------------//\n\n@mixin btnBasic($width, $height) {\n  width: $width;\n  height: $height;\n  a {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n// with spritesmith\n@mixin btnSprite($sprite) {\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n  a {\n    @include sprite($sprite);\n    @include hidetxt;\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n// with spritesmith\n@mixin btnSprite2x($sprite) {\n  @include sprite-width-2x($sprite);\n  @include sprite-height-2x($sprite);\n  a {\n    @include sprite2x($sprite);\n    @include hidetxt;\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n// with spritesmith\n@mixin btnLabelSprite($width, $height, $sprite) {\n  width: $width;\n  height: $height;\n  position: relative;\n  a {\n    @include absoluteTopLeft;\n    display: block;\n    width: 100%;\n    height: 100%;\n    span {\n      @include sprite($sprite);\n      @include hidetxt;\n      @include absoluteCenterVH;\n    }\n  }\n}\n\n// with spritesmith\n@mixin btnLabelSprite2x($width, $height, $sprite) {\n  width: $width;\n  height: $height;\n  position: relative;\n  a {\n    @include absoluteTopLeft;\n    display: block;\n    width: 100%;\n    height: 100%;\n    span {\n      @include sprite2x($sprite);\n      @include hidetxt;\n      @include absoluteCenterVH;\n    }\n  }\n}\n\n//--------------//\n//   position   //\n//--------------//\n\n@mixin negativeMarginCenterVH($marginTop, $marginLeft) {\n  position: absolute;\n  margin: $marginTop 0 0 $marginLeft;\n  left: 50%;\n  top: 50%;\n}\n\n@mixin negativeMarginCenterV($marginTop) {\n  position: absolute;\n  margin-top: $marginTop;\n  top: 50%;\n}\n\n@mixin negativeMarginCenterH($marginLeft) {\n  position: absolute;\n  margin-left: $marginLeft;\n  left: 50%;\n}\n\n@mixin absoluteCenterVH {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n}\n\n@mixin absoluteCenterV {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  margin-top: auto;\n  margin-bottom: auto;\n}\n\n@mixin absoluteCenterH {\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n@mixin absoluteTopLeft {\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n\n@mixin absoluteTopRight {\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n@mixin absoluteBottomLeft {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n}\n\n@mixin absoluteBottomRight {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n}\n\n@mixin absoluteTopCenter {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n@mixin absoluteBottomCenter {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n@mixin absoluteCenterLeft {\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  margin-top: auto;\n  margin-bottom: auto;\n}\n\n@mixin absoluteCenterRight {\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin-top: auto;\n  margin-bottom: auto;\n}\n\n@mixin sprite-width-2x($sprite) {\n  width: nth($sprite, 5) / 2;\n}\n\n@mixin sprite-height-2x($sprite) {\n  height: nth($sprite, 6) / 2;\n}\n\n@mixin sprite-position-2x($sprite) {\n  $sprite-offset-x: nth($sprite, 3)/2;\n  $sprite-offset-y: nth($sprite, 4)/2;\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image-2x($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite-size-2x($sprite) {\n  background-size: nth($sprite, 7)/2 nth($sprite, 8)/2;\n}\n\n@mixin sprite2x($sprite) {\n  @include sprite-image-2x($sprite);\n  @include sprite-position-2x($sprite);\n  @include sprite-width-2x($sprite);\n  @include sprite-height-2x($sprite);\n  @include sprite-size-2x($sprite);\n}\n\n//------------//\n//   others   //\n//------------//\n\n@mixin hidetxt {\n  text-indent: 120%;\n  white-space: nowrap;\n  overflow: hidden;\n  line-height: 0.1;\n}\n\n@mixin clearfix {\n  &:after {\n    content: \".\";\n    display: block;\n    height: 0;\n    clear: both;\n    visibility: hidden;\n  }\n}\n","@charset \"utf-8\";\n\n/**\n * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)\n * http://cssreset.com\n */\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n","@charset \"utf-8\";\n\n$colorBlack: #000;\n$colorWhite: #fff;\n","/*\nSCSS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon-home: x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet: width height image $spritesheet-sprites;\n*/\n$dummy1Name: 'dummy1';\n$dummy1X: 0px;\n$dummy1Y: 0px;\n$dummy1OffsetX: 0px;\n$dummy1OffsetY: 0px;\n$dummy1Width: 600px;\n$dummy1Height: 400px;\n$dummy1TotalWidth: 902px;\n$dummy1TotalHeight: 400px;\n$dummy1Image: '../img/sprites.png';\n$dummy1: (0px, 0px, 0px, 0px, 600px, 400px, 902px, 400px, '../img/sprites.png', 'dummy1', );\n$dummy2Name: 'dummy2';\n$dummy2X: 602px;\n$dummy2Y: 0px;\n$dummy2OffsetX: -602px;\n$dummy2OffsetY: 0px;\n$dummy2Width: 300px;\n$dummy2Height: 200px;\n$dummy2TotalWidth: 902px;\n$dummy2TotalHeight: 400px;\n$dummy2Image: '../img/sprites.png';\n$dummy2: (602px, 0px, -602px, 0px, 300px, 200px, 902px, 400px, '../img/sprites.png', 'dummy2', );\n$spritesheetWidth: 902px;\n$spritesheetHeight: 400px;\n$spritesheetImage: '../img/sprites.png';\n$spritesheetSprites: ($dummy1, $dummy2, );\n$spritesheet: (902px, 400px, '../img/sprites.png', $spritesheetSprites, );\n\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  @include sprite-width($icon-home);\n}\n\n.icon-email {\n  @include sprite($icon-email);\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of SCSS\n\n@include sprites($spritesheet-sprites);\n*/\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n"],"mappings":"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","names":[]}